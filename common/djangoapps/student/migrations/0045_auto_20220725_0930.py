# Generated by Django 3.2.13 on 2022-07-25 09:30

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('course_overviews', '0027_liveclasses'),
        ('student', '0044_courseenrollmentcelebration_celebrate_weekly_goal'),
    ]

    operations = [
        migrations.CreateModel(
            name='Badges',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('badge_name', models.CharField(blank=True, max_length=20, null=True)),
                ('min_points', models.IntegerField(blank=True, default=0, null=True, unique=True)),
                ('active', models.BooleanField(default=True)),
                ('badge_image', models.ImageField(blank=True, max_length=256, null=True, upload_to='badge_image/')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='badges_created_by', to=settings.AUTH_USER_MODEL)),
                ('last_updated_by', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='badges_updated_by', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'course_badges',
            },
        ),
        migrations.AddField(
            model_name='courseenrollment',
            name='assigned_by',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='courseenrollment_assigned_by', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='historicalcourseenrollment',
            name='assigned_by',
            field=models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='userprofile',
            name='user_attendance',
            field=models.PositiveIntegerField(blank=True, default=0, null=True),
        ),
        migrations.AlterField(
            model_name='courseenrollment',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='courseenrollment_user', to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='Progress',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('chapter_name', models.CharField(blank=True, max_length=100, null=True)),
                ('hw_completed', models.BooleanField(default=False)),
                ('assign_completed', models.BooleanField(default=False)),
                ('progress', models.FloatField(default=0)),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='course_overviews.courseoverview')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'course_progress',
            },
        ),
        migrations.CreateModel(
            name='NotifyCallRequest',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('requested_at', models.DateTimeField(null=True)),
                ('messeage', models.CharField(max_length=300, null=True)),
                ('seen', models.BooleanField(default=False)),
                ('requested_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='notifycallrequest_requested_by', to=settings.AUTH_USER_MODEL)),
                ('requested_to', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='notifycallrequest_requested_to', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'notify_call_request_details',
            },
        ),
        migrations.CreateModel(
            name='LiveClassEnrollment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('liveclass_attendance', models.PositiveIntegerField(blank=True, default=0, null=True)),
                ('updated_at', models.DateTimeField(null=True)),
                ('live_class', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='course_overviews.liveclasses')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='DocumentStorage',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('chapter_name', models.CharField(blank=True, help_text='Course Chapter Name', max_length=50, null=True)),
                ('document_type', models.CharField(blank=True, max_length=10, null=True)),
                ('document_name', models.CharField(blank=True, help_text='Enter Document Name', max_length=50, null=True)),
                ('document', models.FileField(upload_to='course_docs')),
                ('added_on', models.DateTimeField(auto_now=True)),
                ('updated_on', models.DateTimeField(auto_now_add=True)),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='Course', to='course_overviews.courseoverview')),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'cms_doc_storage',
            },
        ),
        migrations.CreateModel(
            name='CoinsEarn',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('badge', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='student.badges')),
                ('student', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'course_coin_earn',
            },
        ),
        migrations.CreateModel(
            name='Announcement',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('content', models.TextField(blank=True, default='lorem ispum', null=True)),
                ('active', models.BooleanField(default=True)),
                ('announcement_bases', models.CharField(blank=True, choices=[('all', 'all'), ('student', 'student'), ('course', 'course')], default='all', max_length=7, null=True)),
                ('announcement_for', models.JSONField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'launch_announcements',
            },
        ),
        migrations.CreateModel(
            name='CoursePoints',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('chapter', models.CharField(blank=True, max_length=100, null=True)),
                ('reward_coins', models.IntegerField(blank=True, default=0, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='course_overviews.courseoverview')),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='coursepoints_created_by', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'course_chapter_points',
                'unique_together': {('course', 'chapter')},
            },
        ),
    ]
